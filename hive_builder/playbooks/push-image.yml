- name: inspect from image
  docker_image_info:
    name: "{{ hive_from }}"
  delegate_to: "{{ hive_safe_repository_server }}"
  register: from_image_info
  # prepare short cut variable
- set_fact:
    orig_config: "{{ from_image_info.images[0].Config }}"
- name: reset build overrides
  # original Config for alpine {"Cmd": ["/bin/sh"],"WorkingDir": "","Entrypoint": null}
  # original Config for centos {"Cmd": ["/bin/bash"],"WorkingDir": "","Entrypoint": null}
  set_fact:
    reset_build_overrides: ""
- set_fact:
    # --change 'ENTRYPOINT []' does not set null, so set ["/bin/sh","-c","exec \"$@\"","--"]
    reset_build_overrides: "{{reset_build_overrides}} --change 'ENTRYPOINT {% if hive_entrypoint is defined %}{{ hive_entrypoint | to_json }}{% elif orig_config.Entrypoint is defined and orig_config.Entrypoint != none %}{{ orig_config.Entrypoint | to_json }}{% else %}[\"/bin/sh\",\"-c\",\"exec \\\"$@\\\"\",\"--\"]{% endif %}'"
  when: not (hive_standalone | default(False))
- set_fact:
    # --change CMD cannot set null, so set []
    reset_build_overrides: "{{reset_build_overrides}} --change 'CMD {% if hive_command is defined %}{{ hive_command | to_json }}{% elif orig_config.Cmd is defined and orig_config.Cmd != none %}{{ orig_config.Cmd | to_json }}{% else %}[]{% endif %}'"
  when: not (hive_standalone | default(False))
- set_fact:
    # --change WORKDIR cannot set "", so set /
    reset_build_overrides: "{{reset_build_overrides}} --change 'WORKDIR {% if hive_working_dir is defined %}{{ hive_working_dir | to_json }}{% elif orig_config.WorkingDir == '' %}/{% else %}{{ orig_config.WorkingDir | to_json }}{% endif %}'"
  when: hive_working_dir is defined
- set_fact:
    reset_build_overrides: >-
      {{ reset_build_overrides }}
      {%- if hive_expose is string -%}
         {{ ' --change' }} 'EXPOSE {{ hive_expose }}'
      {%- else -%}
        {%- for value in hive_expose -%}
          {{ ' --change' }} 'EXPOSE {{ value }}'
        {%- endfor -%}
      {%- endif -%}
  when: hive_expose is defined
- debug: var=reset_build_overrides
- name: commit image
  shell: |
    docker stop "build_{{ inventory_hostname }}"
    docker commit {{ reset_build_overrides }} "build_{{ inventory_hostname }}"  "{{ hive_safe_image_tag_latest }}"
  delegate_to: "{{ hive_safe_repository_server }}"
  register: commit_result

- name: push image
  shell: |
    docker push "{{ hive_safe_image_tag_latest }}"
  when: commit_result is defined and commit_result.rc == 0
  delegate_to: "{{ hive_safe_repository_server }}"
  register: push
