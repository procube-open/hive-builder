$umask 0000
$ModLoad imudp
$RuleSet docker
template(name="pathForService" type="string" string="/var/log/services/%APP-NAME%.log")
template(name="pathForStandalone" type="string" string="/var/log/services/%HOSTNAME%.log")
template(name="pathForInner" type="string" string="/var/log/services/%HOSTNAME%.%APP-NAME%.log")
template(name="logFormat" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% %syslogtag% %msg%\n")
template(name="logFormatStandalone" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% %syslogfacility-text%.%syslogseverity-text%: %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
template(name="logFormatOther" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% %hostname% %syslogfacility-text%.%syslogseverity-text%: %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
template(name="logFormatErrorStandalone" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% /var/log/services/%HOSTNAME%.log %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
template(name="logFormatErrorApp" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% /var/log/services/%APP-NAME%.log %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
template(name="logFormatErrorInner" type="string" string="%timegenerated:::date-year%/%timegenerated:::date-month%/%timegenerated:::date-day% %timegenerated:::date-hour%:%timegenerated:::date-minute%:%timegenerated:::date-second% /var/log/services/%HOSTNAME%.%APP-NAME%.log %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")

if not re_match($hostname, '^(localhost|{{ 'p-' if hive_stage == 'private' else 's-' if hive_stage == 'staging' else '' }}hive[0-9]+.{{ hive_name }})$') then {
  action(type="omfile" dynaFile="pathForStandalone" fileCreateMode="0640" fileGroup="zabbix" template="logFormatStandalone" action.copyMsg="on")
} else if $syslogfacility-text == 'local0' then {
  action(type="omfile" dynaFile="pathForService" fileCreateMode="0640" fileGroup="zabbix" template="logFormat" action.copyMsg="on")
}  else if $syslogfacility-text == 'local1' then {
  action(type="omfile" dynaFile="pathForInner" fileCreateMode="0640" fileGroup="zabbix" template="logFormat" action.copyMsg="on")
} else {
  action(type="omfile" file="/var/log/service-other-facility.log" template="logFormatOther" action.copyMsg="on")
}
$IncludeConfig /etc/rsyslog-services.d/*.conf
$InputUDPServerBindRuleset docker
$UDPServerRun {{ hive_safe_syslog_port }}
$RuleSet RSYSLOG_DefaultRuleset
