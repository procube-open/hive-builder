# setting retries to avoid following error on azure
# fatal: [hive0.pdns]: FAILED! => changed=false
#  msg: 'Failure downloading https://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm, Request failed: <urlopen error [Errno 101] Network is unreachable>'
#  results: []
- name: Install Zabbix Repo
  yum:
    name: https://repo.zabbix.com/zabbix/5.1/rhel/8/x86_64/zabbix-release-5.1-1.el8.noarch.rpm
    disable_gpg_check: true
    state: present
  until: not download_zabbix_repo.failed
  retries: 10
  delay: 5
  register: download_zabbix_repo
- import_tasks: iptables.yml
  vars:
    hive_safe_iptables_name: zabbix_tcp
    hive_safe_iptables_dports:
      - 10050
    hive_safe_iptables_protocol: tcp
    hive_safe_iptables_sources: "{{ (groups['servers'] | intersect(groups[hive_stage]) | map('extract', hostvars, 'hive_private_ip') | list) + [hive_safe_zabbix_subnet | ipaddr(2) | ipaddr('address')] }}"
- name: yum install
  yum:
    name=zabbix-agent
    state=installed
- name: create zabbix home/.docker directory
  file:
    path: /var/lib/zabbix/.docker
    state: directory
    mode: 0775
    owner: zabbix
    group: zabbix
- name: create virtual env for zabbix
  become_user: zabbix
  pip:
    name:
      - pip
    virtualenv: /var/lib/zabbix/docker
    virtualenv_python: python3
    extra_args: "{{ '-i ' + hive_pip_index_url if hive_pip_index_url is defined else omit }}"
    state: latest
  args:
    chdir: /var/lib/zabbix
- name: set PyPi index url for zabbix
  become_user: zabbix
  copy:
    content: |
      [global]
      index-url = {{ hive_pip_index_url }}
    dest: /var/lib/zabbix/docker/pip.conf
  when: hive_pip_index_url is defined
- name: create virtual env for zabbix
  become_user: zabbix
  pip:
    name:
      - wheel
      - docker
      - uptime
      - six
    virtualenv: /var/lib/zabbix/docker
    state: present
  args:
    chdir: /var/lib/zabbix
- name: "setup tls connection - put ca certs"
  copy:
    src: "{{ hive_safe_ca_dir }}/cacert.pem"
    dest: "/var/lib/zabbix/.docker/ca.pem"
    owner: zabbix
    group: zabbix
    mode: 0600
- name: "setup tls connection - put certs"
  copy:
    remote_src: True
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0600
    owner: zabbix
    group: zabbix
  with_items:
    - src: "{{ hive_safe_tls_dir }}/private/{{ inventory_hostname }}_key.pem"
      dest: "/var/lib/zabbix/.docker/key.pem"
    - src: "{{ hive_safe_tls_dir }}/certs/{{ inventory_hostname }}_cert.pem"
      dest: "/var/lib/zabbix/.docker/cert.pem"
- name: copy selinux module for zabbix-agent
  copy:
    src: "{{ 'hive.te.amzn' if ansible_distribution == 'Amazon' else 'hive.te' }}"
    dest: /root/hive.te
  register: result_hive_zabbix_agent_policy
  when: hive_safe_selinux != 'disabled'
- name: install selinux module for zabbix-agent
  make:
    chdir: /root
    target: load
    file: /usr/share/selinux/devel/Makefile
  become: yes
  when: hive_safe_selinux != 'disabled'
- name: set SELinux boolean for zabbix agent
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop: "{{ hive_safe_selinux_boolean_amzn if ansible_distribution == 'Amazon' else hive_safe_selinux_boolean }}"
  when: hive_safe_selinux != 'disabled'
- name: modify zabbix_agentd config
  template: >
    src=zabbix_agentd.conf.j2
    dest='/etc/zabbix/zabbix_agentd.conf'
    owner=root
    group=root
    mode=0644
  notify: zabbix-agent configured
- name: put zabbix_agentd userparameter definition from template
  template:
    src: "{{ item.src }}"
    dest: "/etc/zabbix/zabbix_agentd.d/{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - src: docker-volume.j2
      dest: docker-volume.conf
    - src: docker-service.j2
      dest: docker-service.conf
  notify: zabbix-agent configured
  when: "'repository' in group_names"
- name: add cache builder for zabbix agent service
  template:
    src: "{{item}}"
    dest: /usr/lib/systemd/system
    mode: 0644
  with_items:
    - zabbix-agent-cache-builder.service
    - zabbix-agent-cache-builder.timer
  when: "'repository' in group_names"
  notify: zabbix-agent-cache-builder configured
- name: put zabbix_agentd userparameter definition
  copy:
    src: "{{ item }}"
    dest: /etc/zabbix/zabbix_agentd.d/
    owner: root
    group: root
    mode: 0644
  loop:
    - drbd-resource.conf
    - userparameter_systemd_services.conf
  notify: zabbix-agent configured
  when: "'hives' in group_names"
- name: put zabbix_agentd userparameter definition for selinux
  copy:
    src: ausearch.conf
    dest: /etc/zabbix/zabbix_agentd.d/
    owner: root
    group: root
    mode: 0644
  when: hive_safe_selinux != 'disabled'
- name: put script to discover docker volumes and services
  copy:
    src: "{{ item }}"
    dest: /var/lib/zabbix
    owner: zabbix
    group: zabbix
  loop:
    - docker-volume-discover.py
    - docker-service.py
  when: "'repository' in group_names"
- name: put script to discover and get status systemd services
  copy:
    src: "{{ item }}"
    dest: "/usr/bin/"
    mode: 0755
  loop:
    - zbx_service_discovery.sh
    - zbx_service_restart_check.sh
- name: put additional config file for zabbix discover
  copy:
    src: service_discovery_blacklist
    dest: /etc/zabbix/
    owner: root
    group: root
    mode: 0644
- name: put sudoers file for zabbix agent
  copy:
    src: sudoers.zabbix
    dest: /etc/sudoers.d/zabbix
    owner: root
    group: root
    mode: 0440
- name: enable zabbix-agent
  service:
    name: zabbix-agent
    enabled: yes