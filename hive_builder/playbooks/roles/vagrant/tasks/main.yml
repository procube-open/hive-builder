---
- name: Put Vagrantfile
  copy:
    src: Vagrantfile
    dest: "{{ hive_context_dir }}/Vagrantfile"
  when: not hive_destroy  | default(false) and not hive_halt  | default(false)
- name: Put growfs script
  copy:
    src: growfs.sh
    dest: "{{ hive_context_dir }}/growfs.sh"
    mode: 0755
  when: not hive_destroy  | default(false) and not hive_halt  | default(false)
- name: Put vagrant parameter file
  template:
    src: vagrant_vars.yml.j2
    dest: "{{ hive_context_dir }}/vagrant_vars.yml"
  when: not hive_destroy  | default(false) and not hive_halt  | default(false)
- name: invoke Vagrant
  hive_vagrant:
    vagrant_dir: "{{ hive_context_dir }}"
    box_name: "{{ hive_vagrant_box_name | default('centos/7') }}"
    instances: "{{ groups['servers'] | intersect(groups[hive_stage]) | map('extract', hostvars) | list}}"
    cmd: "{% if hive_destroy | default(false) %}destroy{% elif hive_halt | default(false) %}halt{% else %}up{% endif %}"
  # set vagrant server url prevent following error on linux scl vagrant package
  # $ vagrant box add centos/7
  # The box 'centos/7' could not be found or
  # could not be accessed in the remote catalog. If this is a private
  # box on HashiCorp's Atlas, please verify you're logged in via
  # `vagrant login`. Also, please double-check the name. The expanded
  # URL and error message are shown below:
  #
  # URL: ["https://atlas.hashicorp.com/centos/7"]
  # Error: The requested URL returned error: 404 Not Found
  environment:
    VAGRANT_SERVER_URL: https://vagrantcloud.com
  register: hive_vagrant_result

- name: generate ssh-config
  command: vagrant ssh-config
  args:
    chdir: "{{ hive_context_dir }}"
  check_mode: False
  register: hive_safe_vagrant_ssh_config
  changed_when: False
  when:
    - not hive_destroy  | default(false) and not hive_halt  | default(false)
    - not 'aborted' in (groups['servers'] | intersect(groups[hive_stage]) | map('extract', hive_vagrant_result.status ))
    - not 'absent' in (groups['servers'] | intersect(groups[hive_stage]) | map('extract', hive_vagrant_result.status ))
    - not 'not_created' in (groups['servers'] | intersect(groups[hive_stage]) | map('extract', hive_vagrant_result.status ))
- name: put ssh-config
  copy:
    content: "{{ hive_safe_vagrant_ssh_config.stdout }}"
    dest: "{{ hive_context_dir }}/ssh_config"
  when:
    - not (hive_safe_vagrant_ssh_config.skipped | default(false))
- name: put RemoteForward setting
  replace:
    regexp: "^  User vagrant$"
    replace: "  User vagrant\n  RemoteForward {{ hive_http_proxy_port }} {{ hive_http_proxy }}"
    path: "{{ hive_context_dir }}/ssh_config"
  when:
    - hive_http_proxy is defined
