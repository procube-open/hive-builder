---
plugin: hive_services
services:
  powerdns:
    image: procube/powerdns:latest
    environment:
      MYSQL_PASSWORD: "{{db_password}}"
      MYSQL_HOST: pdnsdb
      MYSQL_DNSSEC: "yes"
      MYSQL_CHECK_INTERVAL: "10"
      MYSQL_CHECK_RETRY: "50"
    command:
    - "--api=yes"
    - "--api-key={{db_password}}"
    - "--webserver=yes"
    - "--webserver-address=0.0.0.0"
    - "--webserver-allow-from=0.0.0.0/0"
    ports:
    - "53:53/tcp"
    - "8081"
    - "53:53/udp"
    initialize_roles:
    - python-aptk
    - powerdns-init
  pdnsdb:
    image:
      from: "mariadb:10.4"
      roles:
      - python-aptk
      - powerdns-initdb
    environment:
      MYSQL_ROOT_PASSWORD: "{{db_password}}"
      MYSQL_USER: powerdns
      MYSQL_PASSWORD: "{{db_password}}"
      MYSQL_DATABASE: powerdns
      # maridb container spend long time to initialize timezone info of the database.
      # it can be skip by following envinronment variable.
      # MYSQL_INITDB_SKIP_TZINFO: "yes"
    volumes:
    - source: pdnsdb_data
      target: /var/lib/mysql
      type: volume
      drbd:
        size: 500M
        fstype: xfs
        available_on:
        - production
        - staging
    backup_scripts:
    - name: pdnsdb
      backup_command: "mysqldump -u powerdns -p{{db_password}} powerdns -r /root/today.sql"
      restore_command: "echo source /root/today.sql | mysql -B -u powerdns -p{{db_password}} -D powerdns"
      backup_file: /root/today.sql
      restore_file: /root/today.sql
      ext: sql
      cleanup_days_before: 3
  pdnsadmin:
    image:
      from: ngoduykhanh/powerdns-admin:0.2.2
      roles:
      - powerdns-admin
    ports:
      - "80"
    environment:
      SQLALCHEMY_DATABASE_URI: "sqlite:////app/data/padmin.sqlite"
      GUINCORN_TIMEOUT: "60"
      GUNICORN_WORKERS: "2"
    volumes:
    - source: pdnsadmin_data
      target: /app/data
      type: volume
      drbd:
        size: 500M
        fstype: xfs
        available_on:
        - production
        - staging
    labels:
      published_fqdn: "pdnsadmin.{{ hive_name }}.{{ domain }}"
    monitor_error:
      - Error
      - Exception
    ignore_error:
      - "Error handling request /(favicon.ico|echo.php)"
      - "ERROR - Exception on /(favicon.ico|echo.php)"
  proxy:
    image: "procube/nginx:latest"
    ports:
    - target_port: 80
      published_port: 80
      protocol: tcp
      # mode: host
    - target_port: 443
      published_port: 443
      protocol: tcp
      # mode: host
    volumes:
    - source: proxy_config
      target: /etc/nginx/conf.d
      type: volume
      drbd:
        size: 80M
        fstype: xfs
        available_on:
        - production
        - staging
    # mode: global
    # endpoint_mode: dnsrr
    placement:
      constraints:
      - node.labels.proxy_config == true
  configure:
    image:
      from: python:3-alpine
      roles:
        - proxy-configure
      entrypoint:
      - /usr/local/bin/python
      command:
      - /usr/sbin/proxy-configure
    environment:
      TZ: JST-9
    volumes:
    - source: proxy_config
      target: /etc/nginx/conf.d
      type: volume
    - source: /var/run/docker.sock
      target: /var/run/docker.sock
    # mode: global
    labels:
      HIVE_MARK: proxy_config
  certbot:
    image:
      from: certbot/certbot:latest
      roles:
        - certbot-runner
      entrypoint:
      - /usr/local/bin/python
      command:
      - /usr/sbin/certbot-runner
    environment:
      TZ: JST-9
      CERTBOT_EMAIL: "{{ hive_email | default(omit) }}"
      CERTBOT_PDNS_API_KEY: "{{ db_password }}"
      CERTBOT_PDNS_BASE_URL: "http://powerdns:8081/api/v1"
    volumes:
    - source: letsencrypt_data
      target: /etc/letsencrypt
      type: volume
      drbd:
        size: 52M
        fstype: xfs
    - source: /var/run/docker.sock
      target: /var/run/docker.sock
    backup_scripts:
    - name: certificates
      directory: /etc/letsencrypt
      cleanup_days_before: 3
    available_on:
    - production
    - staging
